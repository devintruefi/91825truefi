options:
  logging: CLOUD_LOGGING_ONLY
  # Increase machine type for faster builds
  machineType: 'E2_HIGHCPU_8'

steps:
  # Build Docker image using root Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/truefi-backend:$SHORT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/truefi-backend:latest',
      '-f', 'Dockerfile',  # Use root Dockerfile
      '.'  # Build context is root directory
    ]

  # Push Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '--all-tags',
      'gcr.io/$PROJECT_ID/truefi-backend'
    ]

  # Deploy to Cloud Run with optimized settings
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'truefi-backend',
      '--image', 'gcr.io/$PROJECT_ID/truefi-backend:$SHORT_SHA',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--add-cloudsql-instances', '$PROJECT_ID:us-central1:true-fi-db',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '1Gi',  # Increased memory for better performance
      '--cpu', '2',  # Increased CPU
      '--min-instances', '1',  # Keep 1 instance warm
      '--max-instances', '10',
      '--timeout', '300',  # 5 minute timeout for startup
      '--execution-environment', 'gen2',  # Use 2nd gen execution environment
      '--cpu-boost',  # CPU boost during startup
      '--service-account', 'cloud-run-sa@$PROJECT_ID.iam.gserviceaccount.com',
      '--set-env-vars', 'PORT=8080,PYTHONUNBUFFERED=1'
    ]

images:
  - 'gcr.io/$PROJECT_ID/truefi-backend:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/truefi-backend:latest'