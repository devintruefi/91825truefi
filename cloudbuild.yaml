options:
  logging: CLOUD_LOGGING_ONLY
  # Increase machine type for faster builds
  machineType: 'E2_HIGHCPU_8'

steps:
  # Build Docker image using root Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/truefi-backend:$SHORT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/truefi-backend:latest',
      '-f', 'Dockerfile',  # Use root Dockerfile
      '.'  # Build context is root directory
    ]

  # Push Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '--all-tags',
      'gcr.io/$PROJECT_ID/truefi-backend'
    ]

  # Deploy to Cloud Run with production settings
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'truefi-backend-prod',  # New service name for production
      '--image', 'gcr.io/$PROJECT_ID/truefi-backend:$SHORT_SHA',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--add-cloudsql-instances', '$PROJECT_ID:us-central1:true-fi-db',
      '--allow-unauthenticated',  # Allow public access for chat endpoints
      '--vpc-connector', 'truefi-connector',  # Use VPC connector for private IP
      '--port', '8080',
      '--memory', '1Gi',
      '--cpu', '2',
      '--min-instances', '1',  # Keep 1 instance warm
      '--max-instances', '10',
      '--timeout', '300',
      '--execution-environment', 'gen2',
      '--cpu-boost',
      # Use private IP for database connection
      '--set-env-vars', 'PYTHONUNBUFFERED=1,DB_HOST=10.109.208.3,DB_PORT=5432,DB_NAME=truefi_app_data,DB_USER=truefi_user,DB_SSLMODE=disable',
      # Use secrets from Secret Manager
      '--set-secrets', 'DB_PASSWORD=db-password:latest,OPENAI_API_KEY=openai-api-key:latest,JWT_SECRET=jwt-secret:latest'
    ]

images:
  - 'gcr.io/$PROJECT_ID/truefi-backend:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/truefi-backend:latest'